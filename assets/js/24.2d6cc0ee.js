(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{338:function(t,a,s){"use strict";s.r(a);var n=s(37),e=Object(n.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"token"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#token","aria-hidden":"true"}},[t._v("#")]),t._v(" Token")]),t._v(" "),s("p",[t._v("The token service facilitate a simply interface to work with a special case of Ethereum smartcontracts, with common ERC20 interface. ERC20 is a standard smart contract template for Ethereum fungible tokens, to know more read the next "),s("a",{attrs:{href:"https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md"}},[t._v("link")]),t._v(".")]),t._v(" "),s("p",[t._v("To work with it we need an ERC20 contract deployed. We must register the contract in Hancock to operate with it.")]),t._v(" "),s("p",[t._v("The service needs a "),s("a",{attrs:{href:"../java/#using-all-together"}},[t._v("config object")]),t._v(" and a service of ethereum transactions, that is included in EthereumClient.")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("EthereumTokenService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("HancockConfig config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EthereumTransactionService transactionClient"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("config "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("transactionClient "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" transactionClient"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"register-erc20-contract-on-hancock"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#register-erc20-contract-on-hancock","aria-hidden":"true"}},[t._v("#")]),t._v(" Register ERC20 contract on Hancock")]),t._v(" "),s("p",[t._v("We can register the ERC20 smart contract to operate with it in Hancock.")]),t._v(" "),s("p",[t._v("We must deploy the contract in the dlt network before, since we need the address of the contract.")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@param")]),t._v(" alias"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" An alias "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the token\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@param")]),t._v(" address"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" The address of the deployed smart contract token instance\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" @"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" The result of the request\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" @"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" Exception\n\nhancockClient"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTokenService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("register")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("alias"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("address"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("After finish the registration of the contract, you can get a list of all registered erc20 contracts on Hancock.")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" @"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" The list of all tokens registered in Hancock\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" @"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" HancockException\n\nhancockClient"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTokenService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAllTokens")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"metadata"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#metadata","aria-hidden":"true"}},[t._v("#")]),t._v(" Metadata")]),t._v(" "),s("p",[t._v("To know all detail about a contract make the next call.")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@param")]),t._v(" addressOrAlias"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Address or alias of the token smart contract registered in Hancock\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" @"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" symbol"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" decimals"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" and totalSupply of the token\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" @"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" HancockException\n\nhancockClient"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTokenService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMetadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("addressOrAlias"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("This give us the common data about ERC20 contracts:")]),t._v(" "),s("ul",[s("li",[t._v("Name: Name of the token.")]),t._v(" "),s("li",[t._v("Symbol: Abbreviation to identify the token.")]),t._v(" "),s("li",[t._v("Decimals: Accuracy of the unit of measurement of the token.")]),t._v(" "),s("li",[t._v("TotalSupply: Total amount of tokens available.")])]),t._v(" "),s("h2",{attrs:{id:"balance"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#balance","aria-hidden":"true"}},[t._v("#")]),t._v(" Balance")]),t._v(" "),s("p",[t._v("Get the token balance for a specific account.")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@param")]),t._v(" addressOrAlias"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Address or alias of the token smart contract registered in Hancock\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@param")]),t._v(" address"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" The token owner`s address\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" @"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" symbol"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" decimals"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" and totalSupply of the token\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" @"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" HancockException\n\nhancockClient"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTokenService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBalance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("addressOrAlias"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" address"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"transfer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#transfer","aria-hidden":"true"}},[t._v("#")]),t._v(" Transfer")]),t._v(" "),s("p",[t._v("You can make a transfer of an amount of your balance from your account to a specific account. You must have enough tokens balance to make the transfer, and enough ethereum balance to send the operation to Ethereum network.")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@param")]),t._v(" request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" The data of the transaction "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("owner"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" receiver"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" amount of tokens "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("in weis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" and the address"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("alias of the contract"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@param")]),t._v(" txConfig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Configuration of how the transaction will be send to the network\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" @"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" The result of the request\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" @"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" Exception\n\nhancockClient"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTokenService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("transfer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" txConfig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"approve"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#approve","aria-hidden":"true"}},[t._v("#")]),t._v(" Approve")]),t._v(" "),s("p",[t._v('This operation allow to owner approve a specific amount of tokens for spender. This spender can perform the "transferFrom" operation until the maximum amount approved.')]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@param")]),t._v(" request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" The data of the transaction "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("token owner`s address"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" token spender`s address"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" amount of tokens "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("in weis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" and the address"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("alias of the contract"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@param")]),t._v(" txConfig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Configuration of how the transaction will be send to the network\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" @"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" The result of the request\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" @"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" Exception\n\nhancockClient"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTokenService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("approve")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" txConfig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"allowance"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#allowance","aria-hidden":"true"}},[t._v("#")]),t._v(" Allowance")]),t._v(" "),s("p",[t._v("To consult the amount of tokens approved by the owner that can be transferred with a \"transferFrom\" operation from spender's account. Returns the amount of tokens approved by the owner that can be transferred to the spender's account")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@param")]),t._v(" request The data of the transaction "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("caller`s address"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" token owner`s address"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" token spender`s address"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" amount of tokens "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("in weis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" and the address"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("alias of the contract"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@param")]),t._v(" txConfig Configuration of how the transaction will be send to the network\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" @"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" The result of the request\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" @"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" Exception\n\nhancockClient"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTokenService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("allowance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" txConfig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"transfer-from"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#transfer-from","aria-hidden":"true"}},[t._v("#")]),t._v(" Transfer from")]),t._v(" "),s("p",[t._v('You can use "transferFrom" operation to transfer tokens from an account with enough balance to a specific account, the spender that invoke the operation must have sufficient allowance to transfer, the sender account must have sufficient balance to transfer.')]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@param")]),t._v(" request The data of the transaction "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("approved spender`s address"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" token sender`s address"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" receiver"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" amount of tokens "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("in weis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" and the address"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("alias of the contract"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@param")]),t._v(" txConfig Configuration of how the transaction will be send to the network\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" @"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" The result of the request\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" @"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" Exception\n\nhancockClient"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTokenService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("transferFrom")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" txConfig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])},[],!1,null,null,null);a.default=e.exports}}]);